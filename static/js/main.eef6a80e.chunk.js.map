{"version":3,"sources":["assets/humans_1.svg","assets/value1.svg","logo.svg","components/Navbar/Navbar.js","components/EmailInput/EmailInput.js","containers/Hero/Hero.js","containers/Value1/Value1.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","navItems","title","link","this","map","el","react_default","a","createElement","className","AppBar","id","position","createNavItems","React","Component","EmailInput","action","type","placeholder","value","Hero","class","components_EmailInput_EmailInput","src","Humans1Img","alt","Value1","Value1Img","App","components_Navbar_Navbar","containers_Hero_Hero","containers_Value1_Value1","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mQCoDzBC,oNA7CdC,SAAW,CACV,CACCC,MAAO,WACPC,KAAM,IAEP,CACCD,MAAO,aACPC,KAAM,IAEP,CACCD,MAAO,YACPC,KAAM,IAEP,CACCD,MAAO,YACPC,KAAM,qFAKP,OAAOC,KAAKH,SAASI,IAAI,SAAAC,GACxB,OACCC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWJ,EAAGJ,0CAQhC,OACCK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,GAAG,SAASC,SAAS,UAC5BN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,WAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZN,KAAKU,2BAvCQC,IAAMC,6BCUZC,gMATb,OACCV,EAAAC,EAAAC,cAAA,QAAMS,OAAO,GAAGR,UAAU,cACzBH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOC,YAAY,2BAA2BV,UAAU,UACpEH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASE,MAAM,cAAcX,UAAU,yBAL9BK,IAAMC,YCwBhBM,mLAnBb,OACCf,EAAAC,EAAAC,cAAA,OAAKc,MAAM,gBACVhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,4EAGAF,EAAAC,EAAAC,cAAA,2GAGAF,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAAA,4BAAmBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,wBAGpBH,EAAAC,EAAAC,cAAA,OAAKgB,IAAKC,IAAYC,IAAI,+BAfXZ,IAAMC,4BCcVY,mLAhBb,OACCrB,EAAAC,EAAAC,cAAA,OAAKc,MAAM,kBACVhB,EAAAC,EAAAC,cAAA,OAAKgB,IAAKI,IAAWF,IAAI,wBACzBpB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,sBAGAF,EAAAC,EAAAC,cAAA,oHATgBM,IAAMC,WCkBZc,MAZf,WACE,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACsB,EAAD,MACAxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,SCHcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.eef6a80e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/humans_1.d2baf6ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/value1.aa0db789.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport './Navbar.sass';\n\nclass Navbar extends React.Component {\n\n\tnavItems = [\n\t\t{\n\t\t\ttitle: \"Symptoms\",\n\t\t\tlink: \"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"Medication\",\n\t\t\tlink: \"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"Financing\",\n\t\t\tlink: \"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"Community\",\n\t\t\tlink: \"\"\n\t\t},\n\t]\n\n\tcreateNavItems() {\n\t\treturn this.navItems.map(el => {\n\t\t\treturn (\n\t\t\t\t<span className=\"navItem\">{el.title}</span>\n\t\t\t)\n\t\t})\n\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<AppBar id=\"navBar\" position=\"sticky\">\n\t\t\t\t<div className=\"innerContainer\">\n\t\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t\tMonarch\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"navItems\">\n\t\t\t\t\t\t{ this.createNavItems() }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</AppBar>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n\n","import React from \"react\";\n\nimport './EmailInput.sass';\n\nclass EmailInput extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<form action=\"\" className=\"emailInput\">\n\t\t\t\t<input type=\"text\" placeholder=\"Enter your email address\" className=\"email\"/>\n\t\t\t\t<input type=\"submit\" value=\"Get Started\" className=\"submitButton\"/>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default EmailInput;\n","import React from \"react\";\nimport Humans1Img from \"assets/humans_1.svg\";\n\nimport \"./Hero.sass\";\n\nimport EmailInput from \"components/EmailInput/EmailInput\";\n\nclass Hero extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"hero section\">\n\t\t\t\t<div className=\"heroContent\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tHaving Lupus doesn’t mean that you have to face it alone.\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tWe’re here to help you find more about Lupus and to receive the support that you require.\n\t\t\t\t\t</p>\n\t\t\t\t\t<EmailInput/>\n\t\t\t\t\t<p>Have questions? <span className=\"expertCTA\">Talk to an Expert.</span></p>\n\n\t\t\t\t</div>\n\t\t\t\t<img src={Humans1Img} alt=\"humans interacting\"/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Hero;\n","import React from \"react\";\nimport Value1Img from \"assets/value1.svg\";\n\nclass Value1 extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"value1 section\">\n\t\t\t\t<img src={Value1Img} alt=\"human brainstorming\"/>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tValue #1\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tWe’re here to help you find more about Lupus and to receive the support that you require.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Value1;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.sass';\n\n\nimport Navbar from 'components/Navbar/Navbar';\nimport Hero from 'containers/Hero/Hero';\nimport Value1 from 'containers/Value1/Value1';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\t    <Navbar/>\n\t    <div className=\"contentBody\">\n\t\t    <Hero/>\n\t\t    <Value1/>\n\t    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}